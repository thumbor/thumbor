# Title: [Commit Type] and Summary, imperative, start upper case, don't end with a period
# Example: [FIX] Changed something or [FEAT] Adding X to PIL engine
# Commit Types:
# * FIX - Whenever you're fixing a bug or issue
# * FEAT - When it's a new feature for thumbor users
# * IMPR - When you're adding an improvement to existing feature or codebase
# No more than 50 chars. #### 50 chars is here: #

# Remember blank line between title and body.

# Please explain whether this change is backwards compatible or not.
# If not, please use the body below to explain why not.
**Is backwards compatible**: yes/no

# Body: Explain *what* and *why* (not *how*). Include github issue if any.
# Wrap at 72 chars. ################################## which is here: #


# At the end: Include Co-authored-by for all contributors.
# Include at least one empty line before it. Format:
# Co-authored-by: name <user@users.noreply.github.com>
#
# How to Write a Git Commit Message:
# https://chris.beams.io/posts/git-commit/
#
# 1. Separate subject from body with a blank line
# 2. Limit the subject line to 50 characters
# 3. Capitalize the subject line
# 4. Do not end the subject line with a period
# 5. Use the imperative mood in the subject line
# 6. Wrap the body at 72 characters
# 7. Use the body to explain what and why vs. how
